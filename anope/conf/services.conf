define
{
	name = "services.example.foo"
	value = "services.example.foo"
}


uplink
{
	host = "ircd"
	ipv6 = no
	ssl = no
	port = 6666
	password = "ch@ng3me3"
}

serverinfo
{
	name = "services.example.foo"
	description = "Services"
	pid = "data/services.pid"
	motd = "conf/services.motd"
}

module
{
	name = "unreal"
	use_server_side_mlock = yes
	use_server_side_topiclock = yes
}

networkinfo
{
	networkname = "irc.example.foo"
	nicklen = 31
	userlen = 10
	hostlen = 64
	chanlen = 32
	modelistsize = 100
	vhost_chars = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789.-"
	disallow_start_or_end = ".-"
}

options
{
	#user = "anope"
	#group = "anope"
	casemap = "ascii"

	/*
	 * This key is used to initiate the random number generator. This number
	 * MUST be random as you want your passcodes to be random. Don't give this
	 * key to anyone! Keep it private!
	 *
	 * NOTE: If you don't uncomment this or keep the default values, any talented
	 * programmer would be able to easily "guess" random strings used to mask
	 * information. Be safe, and come up with a 7-digit number.
	 *
	 * This directive is optional, but highly recommended.
	 */
	#seed = 9866235
	strictpasswords = yes
	badpasslimit = 5
	badpasstimeout = 1h
	updatetimeout = 5m
	expiretimeout = 30m
	readtimeout = 5s
	warningtimeout = 4h
	timeoutcheck = 3s
	#useprivmsg = yes
	#usestrictprivmsg = yes
	#hidestatso = yes
	#ulineservers = "stats.your.network"
	retrywait = 60s
	hideprivilegedcommands = yes
	hideregisteredcommands = yes
	regexengine = "regex/pcre"
	languages = "ca_ES.UTF-8 de_DE.UTF-8 el_GR.UTF-8 es_ES.UTF-8 fr_FR.UTF-8 hu_HU.UTF-8 it_IT.UTF-8 nl_NL.UTF-8 pl_PL.UTF-8 pt_PT.UTF-8 ru_RU.UTF-8 tr_TR.UTF-8"
	#defaultlanguage = "es_ES.UTF-8"
}

include
{
	type = "file"
	name = "botserv.example.conf"
}

include
{
	type = "file"
	name = "chanserv.example.conf"
}

include
{
	type = "file"
	name = "global.example.conf"
}

include
{
	type = "file"
	name = "hostserv.example.conf"
}

include
{
	type = "file"
	name = "memoserv.example.conf"
}

include
{
	type = "file"
	name = "nickserv.example.conf"
}

include
{
	type = "file"
	name = "operserv.example.conf"
}

log
{
        target = "services.log"
        #source = ""
        bot = "Global"
        logage = 7
        admin = "*"
        override = "chanserv/* nickserv/* memoserv/set ~botserv/set botserv/*"
        commands = "~operserv/* *"
        servers = "*"
        #channels = "~mode *"
        users = "connect disconnect nick"
        other = "*"
        rawio = no
        debug = no
}

log
{
        target = "globops"
        admin = "global/* operserv/mode operserv/kick operserv/akill operserv/s*line operserv/noop operserv/jupe operserv/oline operserv/set operserv/svsnick operserv/svsjoin operserv/svspart nickserv/getpass */drop"
        servers = "squit"
        users = "oper"
        other = "expire/* bados akill/*"
}

opertype
{
	name = "Helper"

	commands = "hostserv/*"
}

opertype
{
	name = "Services Operator"
	inherits = "Helper, Another Helper"
	commands = "chanserv/list chanserv/suspend chanserv/topic memoserv/staff nickserv/list nickserv/suspend operserv/mode operserv/chankill operserv/akill operserv/session operserv/modinfo operserv/sqline operserv/oper operserv/kick operserv/ignore operserv/snline"
	privs = "chanserv/auspex chanserv/no-register-limit memoserv/* nickserv/auspex nickserv/confirm"
        #modes = "+o"
}

opertype
{
	name = "Services Administrator"
	inherits = "Services Operator"
	commands = "botserv/* chanserv/access/list chanserv/drop chanserv/getkey chanserv/saset/noexpire memoserv/sendall nickserv/saset/* nickserv/getemail operserv/news operserv/jupe operserv/svs operserv/stats operserv/oline operserv/noop operserv/forbid global/*"
	privs = "*"
}

opertype
{
	name = "Services Root"
	commands = "*"
	privs = "*"
}


oper
{
	name = "example_admin"
	type = "Services Root"
	require_oper = yes
	password = "ch@ng3m3"
	#certfp = "ed3383b3f7d74e89433ddaa4a6e5b2d7"
	#host = "*@*.anope.org ident@*"
	#vhost = "oper.mynet"
}

mail
{
	usemail = yes
	sendmailpath = "/usr/sbin/sendmail -t"
	sendfrom = "services@irc.example.foo"
	delay = 5m
	#dontquoteaddresses = yes
	registration_subject = "Nickname registration for %n"
	registration_message = "Hi,

				You have requested to register the nickname %n on %N.
				Please type \" /msg NickServ CONFIRM %c \" to complete registration.

				If you don't know why this mail was sent to you, please ignore it silently.

				%N administrators"
	reset_subject = "Reset password request for %n"
	reset_message = "Hi,

			You have requested to have the password for %n reset.
			To reset your password, type \" /msg NickServ CONFIRM %n %c \"

			If you don't know why this mail was sent to you, please ignore it silently.

			%N administrators"

	emailchange_subject = "Email confirmation"
	emailchange_message = "Hi,

			You have requested to change your email address from %e to %E.
			Please type \" /msg NickServ CONFIRM %c \" to confirm this change.

			If you don't know why this mail was sent to you, please ignore it silently.

			%N administrators"

	memo_subject = "New memo"
	memo_message = "Hi %n,

			You've just received a new memo from %s. This is memo number %d.

			Memo text:

			%t"
}


/*
 * m_redis
 *
 * This module allows other modules to use Redis.
 */

module
{
    name = "m_redis"
 
    /* A redis database */
    redis
    {
        /* The name of this service */
        name = "redis/main"
 
        /*
         * The redis database to use. New connections default to 0.
         */
        db = 0
 
        ip = "172.16.238.10"
        port = 6379
    }
}

module
{
	name = "db_redis"

	/*
	 * Redis database to use. This must be configured with m_redis.
	 */
	engine = "redis/main"
        
}

#module { name = "enc_bcrypt" }
module { name = "enc_sha256" }

